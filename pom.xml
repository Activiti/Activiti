<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Activiti</name>
	<description>BPM and workflow engine</description>
	<groupId>org.activiti</groupId>
	<artifactId>activiti-root</artifactId>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<packaging>pom</packaging>
    <version>6.1.0-SNAPSHOT</version>
    <properties>
        <!--configuration properties-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>
        <!-- JVM params for test execution -->
        <argLine>-Duser.language=en</argLine>

			<spring.boot.version>2.0.0.M1</spring.boot.version>
			<!-- using SNAPSHOT version to benefit from https://github.com/spring-projects/spring-hateoas/issues/583 -->
			<spring.hateoas.version>0.24.0.BUILD-SNAPSHOT</spring.hateoas.version>
			<mockito.version>2.7.22</mockito.version>
			<assertj.version>3.8.0</assertj.version>

        <!-- plugins -->
        <maven.enforcer.plugin.version>1.4.1</maven.enforcer.plugin.version>
        <jacoco.maven.plugin.version>0.7.9</jacoco.maven.plugin.version>
		</properties>

	<repositories>
    <repository>
        <id>spring-milestones</id>
        <name>Spring Milestones</name>
        <url>https://repo.spring.io/libs-milestone</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </repository>
</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.hateoas</groupId>
				<artifactId>spring-hateoas</artifactId>
				<version>${spring.hateoas.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.193</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.6</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>1.7.6</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.6</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.0.1</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.5</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.jdbc</groupId>
				<artifactId>ojdbc7</artifactId>
				<version>12.1.0.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>2.2.11</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-xjc</artifactId>
				<version>2.2.11</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.1</version>
			</dependency>
			<dependency>
				<groupId>javax.enterprise.concurrent</groupId>
				<artifactId>javax.enterprise.concurrent-api</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.2.11</version>
			</dependency>
			<dependency>
				<groupId>de.odysseus.juel</groupId>
				<artifactId>juel-api</artifactId>
				<version>2.2.7</version>
			</dependency>
			<dependency>
				<groupId>de.odysseus.juel</groupId>
				<artifactId>juel-impl</artifactId>
				<version>2.2.7</version>
			</dependency>
			<dependency>
				<groupId>de.odysseus.juel</groupId>
				<artifactId>juel-spi</artifactId>
				<version>2.2.7</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.27</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.ibm.db2.jcc</groupId>
				<artifactId>db2jcc4</artifactId>
				<version>10.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-engine</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-spring</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-bpmn-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-bpmn-converter</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-json-converter</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-simple-workflow</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-common-rest</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-rest</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-bpmn-layout</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-process-validation</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- EMAIL -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>1.4</version>
			</dependency>
			<!-- Web service -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jta_1.1_spec</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.opensaml</groupId>
				<artifactId>opensaml</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>2.4.5</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-core</artifactId>
				<version>5.5.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-compiler</artifactId>
				<version>5.5.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20070829</version>
			</dependency>
			<dependency>
				<groupId>org.mule.modules</groupId>
				<artifactId>mule-module-cxf</artifactId>
				<version>${mule.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mule.tests</groupId>
				<artifactId>mule-tests-functional</artifactId>
				<version>${mule.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.4.2</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>6.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.fileinstall</artifactId>
				<version>3.5.4</version>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-jdk14</artifactId>
				<version>1.7.6</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.subethamail</groupId>
				<artifactId>subethasmtp-wiser</artifactId>
				<version>1.2</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.3.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.4-1201-jdbc4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>1.6.2</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.10.0</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>math.geom2d</groupId>
				<artifactId>javaGeom</artifactId>
				<version>0.11.1</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.uuid</groupId>
				<artifactId>java-uuid-generator</artifactId>
				<version>3.1.3</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>activiti-bpmn-model</module>
		<module>activiti-process-validation</module>
		<module>activiti-bpmn-layout</module>
		<module>activiti-common-rest</module>
		<module>activiti-rest</module>
		<module>activiti-json-converter</module>
		<module>activiti-bpmn-converter</module>
		<module>activiti-engine</module>
		<module>activiti-spring</module>
		<module>activiti-spring-boot</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<optimize>true</optimize>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<failIfNoTests>false</failIfNoTests>
					<trimStackTrace>false</trimStackTrace>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<excludes>
						<exclude>**/*TestCase.java</exclude>
						<exclude>**/*IT.java</exclude>
					</excludes>
					<runOrder>alphabetical</runOrder>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<argLine>${failsafeArgLine}</argLine>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.maven.plugin.version}</version>
							<executions>
								<!-- Unit tests configuration-->
								<execution>
									<id>pre-unit-test</id>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
									<configuration>
										<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
										<propertyName>surefireArgLine</propertyName>
									</configuration>
								</execution>
								<execution>
									<id>post-unit-test</id>
									<phase>test</phase>
									<goals>
										<goal>report</goal>
									</goals>
									<configuration>
										<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
										<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
									</configuration>
								</execution>
								<!-- Integration tests configuration-->
								<execution>
									<id>pre-integration-test</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
									<configuration>
										<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
										<propertyName>failsafeArgLine</propertyName>
									</configuration>
								</execution>
								<execution>
									<id>post-integration-test</id>
									<phase>post-integration-test</phase>
									<goals>
										<goal>report</goal>
									</goals>
									<configuration>
										<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
										<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
									</configuration>
								</execution>
							</executions>
            </plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.2</version>
					<configuration>
						<mavenExecutorId>forked-path</mavenExecutorId>
						<useReleaseProfile>false</useReleaseProfile>
						<arguments>${arguments} -Psonatype-oss-release</arguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>extra-enforcer-rules</artifactId>
							<version>1.0-beta-6</version>
						</dependency>
						<dependency>
							<groupId>de.is24.maven.enforcer.rules</groupId>
							<artifactId>illegal-transitive-dependency-check</artifactId>
							<version>1.7.4</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>enforce-plugin-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requirePluginVersions>

									</requirePluginVersions>
								</rules>
							</configuration>
						</execution>
						<execution>
							<id>enforce-direct-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<illegalTransitiveDependencyCheck
											implementation="de.is24.maven.enforcer.rules.IllegalTransitiveDependencyCheck">
										<regexIgnoredClasses combine.children="append">
											<!-- The marshalling classes are generated by Errai during GWT compilation. These classes
                                                 usually contain references to other dependencies which are not part of the project
                                                 (transitive dependencies), which then results in the dependency check failure.
                                                 From the maintenance point of view, ignoring these generated classes seems like the
                                                 best option. -->

										</regexIgnoredClasses>
										<suppressTypesFromJavaRuntime>true</suppressTypesFromJavaRuntime>
										<useClassesFromLastBuild>true</useClassesFromLastBuild>
									</illegalTransitiveDependencyCheck>
								</rules>
							</configuration>
						</execution>
						<execution>
							<id>ban-blacklisted-dependencies</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<bannedDependencies>
										<excludes combine.children="append">
											<!-- Ban blacklisted logging deps (we only use SLF4J + Logback) -->
											<!-- In case of transitive dependency, exclude it and use 'org.slf4j:jcl-over-slf4j' instead -->
											<exclude>commons-logging:commons-log*</exclude>
											<!-- In case of transitive dependency, exclude it and use 'org.slf4j:log4j-over-slf4j' instead -->
											<!--<exclude>log4j:log4j</exclude>-->
											<!-- In case of transitive dependency, exclude it and use 'org.javassist:javassist' instead -->
											<exclude>javassist:javassist</exclude>
										</excludes>
									</bannedDependencies>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
						<execution>
							<id>ban-duplicated-classes</id>
							<!-- Using phase=none as we don't want this execution as part of the default build. The phase
                                 is specified in the "full" profile and thus the execution will only be activated when using that profile. -->
							<phase>none</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<banDuplicateClasses>
										<ignoreClasses>
											<!-- Duplicated by XStream's transitive deps, with very little chance to get properly fixed -->
											<ignoreClass>org.xmlpull.v1.XmlPullParserException</ignoreClass>
											<ignoreClass>org.xmlpull.v1.XmlPullParser</ignoreClass>
											<!-- Bundled by both com.sun:tools and com.sun.xml.bind:jaxb-xjc. No easy way to exclude one of them. -->
											<ignoreClass>org.relaxng.datatype.*</ignoreClass>
											<!-- Classes duplicated by the jar itself (bug), see https://issues.apache.org.jira/browse/XMLBEANS-499 -->
											<ignoreClass>org.apache.xmlbeans.xml.stream.XMLName</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.XMLInputStream</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.XMLStreamException</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.ReferenceResolver</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.XMLEvent</ignoreClass>
											<ignoreClass>org.apache.xmlbeans.xml.stream.Location</ignoreClass>
											<!-- Duplicated in xml-apis:xml-apis:jar:1.4.01 and xerces:xercesImpl:jar:2.11.0.SP4. The class is identical
                                                 and there is very little chance this will get ever fixed. -->
											<ignoreClass>org.w3c.dom.ElementTraversal</ignoreClass>
											<ignoreClass>org.w3c.dom.UserDataHandler</ignoreClass>

											<!-- Classes bundled in errai-javax-enterprise which are GWT friendly.
                                                 See https://github.com/errai/errai/blob/master/errai-javax-enterprise/README -->
											<ignoreClass>javax.interceptor.InvocationContext</ignoreClass>
											<ignoreClass>javax.inject.Provider</ignoreClass>
											<ignoreClass>javax.inject.Named</ignoreClass>
											<ignoreClass>javax.inject.Scope</ignoreClass>
											<ignoreClass>javax.inject.Qualifier</ignoreClass>
											<ignoreClass>javax.inject.Singleton</ignoreClass>
											<ignoreClass>javax.enterprise.*</ignoreClass>
											<!-- Servlet API is bundled in way too many different dependencies, causing nightmares trying to
                                                 properly exclude everything. There were no real issues with this so far as mostly the APIs
                                                 are just duplicates of the exactly same sources. In ideal world, this get eventually fixed,
                                                 but it may very well not be worth the effort. -->
											<ignoreClass>javax.servlet.*</ignoreClass>
											<!-- Classes in javax.annotation package are just marker annotations used to aid the programmers.
                                                 These annotations do not influence the actual behavior of the code, so it's reasonable to
                                                 ignore them. Following dependencies contain these classes: 'com.google.code.findbugs:jsr305'
                                                 and 'com.google.code.findbugs:annotations'. -->
											<ignoreClass>javax.annotation.*</ignoreClass>
											<!-- Exactly the same case as for above 'javax.annotation.*' classes. Following dependencies contain
                                                 these classes: 'net.jcip:jcip-annotations' and 'com.google.code.findbugs:annotations'. -->
											<ignoreClass>net.jcip.annotations.*</ignoreClass>

										</ignoreClasses>
										<dependencies>

										</dependencies>
										<findAllDuplicates>true</findAllDuplicates>
									</banDuplicateClasses>
								</rules>
								<fail>${enforcer.failOnDuplicatedClasses}</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<checkstyleRules>
									<module name="Checker">
										<!-- Checks for whitespace. -->
										<module name="FileTabCharacter">
											<property name="severity" value="error"/>
											<property name="eachLine" value="true"/>
										</module>
										<module name="TreeWalker">
											<!-- Import settings: getting rid of redundant import, forbid star notation, defined order of imports. -->
											<module name="RedundantImport"/>
											<module name="AvoidStarImport">
												<property name="excludes" value="org.junit.Assert,org.assertj.core.api.Assertions,org.mockito.Mockito"/>
												<property name="allowClassImports" value="false"/>
												<property name="allowStaticMemberImports" value="false"/>
											</module>
											<module name="CustomImportOrder">
												<property name="customImportOrderRules"
														  value="STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###STATIC"/>
												<property name="sortImportsInGroupAlphabetically" value="true"/>
												<property name="separateLineBetweenGroups" value="true"/>
											</module>

											<module name="NeedBraces">
												<property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
											</module>
											<module name="EqualsHashCode"/>
										</module>
									</module>
								</checkstyleRules>
								<outputFile>${project.build.directory}/checkstyle.log</outputFile>
								<includeTestSourceDirectory>true</includeTestSourceDirectory>
								<includeResources>true</includeResources>
								<includeTestResources>true</includeTestResources>
								<consoleOutput>false</consoleOutput>
								<logViolationsToConsole>${checkstyle.logViolationsToConsole}</logViolationsToConsole>
								<failsOnError>false</failsOnError>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.20</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>



	<!-- Various information, not used by the build -->

	<url>http://activiti.org</url>
	<licenses>
		<license>
			<name>Apache v2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	<organization>
		<name>Alfresco</name>
		<url>http://www.alfresco.com</url>
	</organization>
	<issueManagement>
		<system>JIRA</system>
		<url>https://activiti.atlassian.net/browse/ACT</url>
	</issueManagement>
	<ciManagement>
		<system>Bamboo</system>
		<url>http://bamboo.ci.codehaus.org/browse/ACT</url>
	</ciManagement>
	<scm>
		<url>git@github.com:Activiti/Activiti.git</url>
		<connection>scm:git:git@github.com:Activiti/Activiti.git</connection>
		<developerConnection>scm:git:git@github.com:Activiti/Activiti.git</developerConnection>
	</scm>
</project>
