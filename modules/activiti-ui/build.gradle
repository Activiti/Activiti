
import java.text.SimpleDateFormat;
import java.util.Date;

def getDateTime() {
        SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd-HHmm");
        return format.format(new Date());
}


buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven { url  'http://maven.aliyun.com/nexus/content/repositories/central/' }
        maven { url  'https://plugins.gradle.org/m2/' }
        maven { url  'http://repo.spring.io/libs-snapshot'}
        maven { url  'http://maven.springframework.org/release' }
        maven { url  'http://maven.springframework.org/milestone' }
        maven { url  'http://maven.springframework.org/snapshot' }
        maven { url  'http://download.java.net/maven/2' }
        maven { url  'http://maven.oschina.net/content/groups/public/' }
        maven { url  'https://repository.jboss.org/nexus/content/groups/public-jboss/' }
    }

    dependencies {
        //classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}



allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    //apply plugin: 'org.springframework.boot'
    

  eclipse {
    classpath {
  
    }
  }
}

subprojects {


    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: "io.spring.dependency-management"



    ext {
             currentTime = getDateTime()

            projectVersion = '6.0.0'
            activitiVersion = '6.0.0'
            springVersion = '4.1.6.RELEASE '
            springSecurityVersion = '4.0.1.RELEASE'
            hibernateVersion = '4.2.16.Final'
            jacksonVersion = '2.3.3'
            codahaleMetricsVersion = '3.0.2'
            hazelcastcacheVersion = '3.1.5'
            batikVersion = '1.7'
            jettyVersion = '9.1.3.v20140225'

    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    
    repositories {
        mavenCentral()
        jcenter()
        maven { url  'http://maven.aliyun.com/nexus/content/repositories/central/' }
        maven { url  'https://plugins.gradle.org/m2/' }
        maven { url  'http://repo.spring.io/libs-snapshot'}
        maven { url  'http://maven.springframework.org/release' }
        maven { url  'http://maven.springframework.org/milestone' }
        maven { url  'http://maven.springframework.org/snapshot' }
        maven { url  'http://download.java.net/maven/2' }
        maven { url  'http://maven.oschina.net/content/groups/public/' }
        maven { url  'https://repository.jboss.org/nexus/content/groups/public-jboss/' }
        
    }

}


project(':activiti-app-conf') {
	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

     dependencies {
         compile project(":activiti-app-logic")
         compile project(":activiti-app-rest")
         compile project(":content-storage-api")
         compile project(":content-storage-fs")
         compile project(":editor-image-generator")


	      ////  Activiti 
	    compile("org.activiti:activiti-engine")
	    compile("org.activiti:activiti-spring")
	    compile("org.activiti:activiti-rest")
	    compile("org.activiti:activiti-bpmn-model")
	    compile("org.activiti:activiti-bpmn-converter")
	    compile("org.activiti:activiti-json-converter")
	    compile("org.activiti:activiti-bpmn-layout")
	    compile("org.activiti:activiti-form-engine-configurator")
	    compile("org.activiti:activiti-form-engine")
	    compile("org.activiti:activiti-form-model")
	    compile("org.activiti:activiti-form-json-converter")
	    compile("org.activiti:activiti-dmn-engine-configurator")
	    compile("org.activiti:activiti-dmn-engine")
	    compile("org.activiti:activiti-dmn-model")


	    ////   LOGGING 
	    compile("org.slf4j:slf4j-api")
	    compile("org.slf4j:slf4j-log4j12")
	    compile("org.slf4j:jcl-over-slf4j")

	    ////   JSON 
	    compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org")
	    compile("com.fasterxml.jackson.datatype:jackson-datatype-hppc")
	    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda")

	    ////   Xerces 
	    compile("xerces:xercesImpl")

	    ////   DATABASE 
	    compile("org.liquibase:liquibase-core")
	    compile("com.mchange:c3p0")
	    compile("org.hibernate:hibernate-core")
	    compile("org.hibernate:hibernate-entitymanager")
	    compile("org.hibernate:hibernate-validator")


	    ////   COMMON dependencies 
	    compile("commons-fileupload:commons-fileupload")
	    compile("commons-io:commons-io")
	    compile("org.apache.commons:commons-lang3")
	    compile("javax.annotation:jsr250-api")
	    compile("javax.inject:javax.inject")
	    compile("javax.servlet:javax.servlet-api")
	    compile("javax.servlet:jstl")
	    compile("javax.validation:validation-api")
	    compile("com.google.guava:guava")

	    ////   JODA TIME 
	    compile("joda-time:joda-time")
	    compile("joda-time:joda-time-hibernate")
	    compile("org.jadira.usertype:usertype.core")

	    ////   SPRING 
	    compile("org.aspectj:aspectjweaver")
	    compile("org.springframework:spring-aop")
	    compile("org.springframework:spring-beans")
	    compile("org.springframework:spring-context")
	    compile("org.springframework:spring-context-support")
	    compile("org.springframework:spring-core")
	    compile("org.springframework:spring-expression")
	    compile("org.springframework:spring-orm")
	    compile("org.springframework:spring-tx")
	    compile("org.springframework:spring-web")
	    compile("org.springframework:spring-webmvc")
	    compile("org.springframework.data:spring-data-jpa")
	    compile("org.springframework.security:spring-security-core")
	    compile("org.springframework.security:spring-security-config")
	    compile("org.springframework.security:spring-security-crypto")
	    compile("org.springframework.security:spring-security-web")

	    ////   EMAIL 
	    compile("org.freemarker:freemarker")
	    compile("javax.mail:mail")

	    ////   HTTPCLIENT 
	    compile("org.apache.httpcomponents:httpclient")
	    compile("org.codehaus.groovy:groovy-all")

	    testCompile("junit:junit:4.11")
     }

}

project(':activiti-app-logic') {

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

     dependencies {

		compile project(":content-storage-api")
		compile project(":content-storage-fs")
		compile project(":editor-image-generator")


		///   Activiti -->
		compile("org.activiti:activiti-engine")
		compile("org.activiti:activiti-bpmn-model")
		compile("org.activiti:activiti-bpmn-converter")
		compile("org.activiti:activiti-bpmn-layout")
		compile("org.activiti:activiti-process-validation")
		compile("org.activiti:activiti-json-converter")
		compile("org.activiti:activiti-dmn-xml-converter")
		compile("org.activiti:activiti-dmn-json-converter")
		compile("org.activiti:activiti-form-engine")
		compile("org.activiti:activiti-form-model")
		compile("org.activiti:activiti-form-json-converter")
		compile("org.activiti:activiti-spring")

		///   LOGGING -->
		compile("org.slf4j:slf4j-api")

		///   JSON -->
		compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-hppc")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-joda")

		///   DATABASE -->
		compile("org.hibernate:hibernate-core")
		compile("org.hibernate:hibernate-entitymanager")
		compile("org.hibernate:hibernate-validator")


		compile("commons-fileupload:commons-fileupload")
		compile("commons-io:commons-io")
		compile("org.apache.commons:commons-lang3")
		compile("commons-codec:commons-codec")
		compile("com.google.guava:guava")
		compile("javax.annotation:jsr250-api")
		compile("javax.inject:javax.inject")
		compile("javax.servlet:javax.servlet-api")
		compile("javax.servlet:jstl")
		compile("javax.validation:validation-api")

		///   JODA TIME -->
		compile("joda-time:joda-time")
		compile("joda-time:joda-time-hibernate")
		compile("org.jadira.usertype:usertype.core")

		///   SPRING -->
		compile("org.aspectj:aspectjweaver")
		compile("org.springframework:spring-beans")
		compile("org.springframework:spring-context")
		compile("org.springframework:spring-context-support")
		compile("org.springframework:spring-core")
		compile("org.springframework:spring-aop")
		compile("org.springframework:spring-expression")
		compile("org.springframework:spring-orm")
		compile("org.springframework:spring-tx")
		compile("org.springframework:spring-web")
		compile("org.springframework:spring-webmvc")
		compile("org.springframework.data:spring-data-jpa")
		compile("org.springframework.security:spring-security-core")
		compile("org.springframework.security:spring-security-config")
		compile("org.springframework.security:spring-security-crypto")
		compile("org.springframework.security:spring-security-web")

		///   EMAIL -->
		compile("org.freemarker:freemarker")
		compile("javax.mail:mail")
		compile("commons-validator:commons-validator")

		compile("org.codehaus.groovy:groovy-all")

     }

}

project(':activiti-app-rest') {

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}


    dependencies {
         compile project(":activiti-app-logic")
         compile project(":content-storage-api")
         compile project(":content-storage-fs")

		////   Activiti  
		compile("org.activiti:activiti-engine")
		compile("org.activiti:activiti-bpmn-model")
		compile("org.activiti:activiti-bpmn-converter")
		compile("org.activiti:activiti-json-converter")
		compile("org.activiti:activiti-bpmn-layout")
		compile("org.activiti:activiti-process-validation")
		compile("org.activiti:activiti-spring")

		////   LOGGING  
		compile("org.slf4j:slf4j-api")

		////   JSON  
		compile("com.fasterxml.jackson.core:jackson-core")
		compile("com.fasterxml.jackson.core:jackson-databind")
		compile("com.fasterxml.jackson.core:jackson-annotations")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-hppc")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-joda")

		////   DATABASE  
		compile("org.hibernate:hibernate-core")
		compile("org.hibernate:hibernate-entitymanager")
		compile("org.hibernate:hibernate-validator")



		compile("commons-fileupload:commons-fileupload")
		compile("commons-io:commons-io")
		compile("org.apache.commons:commons-lang3")
		compile("com.google.guava:guava")
		compile("javax.annotation:jsr250-api")
		compile("javax.inject:javax.inject")
		compile("javax.servlet:javax.servlet-api")
		compile("javax.servlet:jstl")
		compile("javax.validation:validation-api")
		compile("org.apache.httpcomponents:httpclient")

		////   JODA TIME  
		compile("joda-time:joda-time")
		compile("joda-time:joda-time-hibernate")
		compile("org.jadira.usertype:usertype.core")

		////   SPRING  
		compile("org.aspectj:aspectjweaver")
		compile("org.springframework:spring-beans")
		compile("org.springframework:spring-context")
		compile("org.springframework:spring-context-support")
		compile("org.springframework:spring-core")
		compile("org.springframework:spring-aop")
		compile("org.springframework:spring-expression")
		compile("org.springframework:spring-orm")
		compile("org.springframework:spring-tx")
		compile("org.springframework:spring-web")
		compile("org.springframework:spring-webmvc")
		compile("org.springframework.data:spring-data-jpa")
		compile("org.springframework.security:spring-security-core")
		compile("org.springframework.security:spring-security-config")
		compile("org.springframework.security:spring-security-crypto")
		compile("org.springframework.security:spring-security-web")

		////   EMAIL  
		compile("org.freemarker:freemarker")
		compile("javax.mail:mail")
		compile("commons-validator:commons-validator")
		compile("org.codehaus.groovy:groovy-all")

    }

}

project(':content-storage-api') {

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

    dependencies {

    }

}

project(':content-storage-fs') {

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

    dependencies {
		compile("org.activiti:content-storage-api")
		compile("commons-io:commons-io")

		////   LOGGING -->
		compile("org.slf4j:slf4j-api")

		////   TESTING -->
		testCompile("junit:junit")
    }

}

 

project(':editor-image-generator') {

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

    dependencies {
		compile("org.activiti:activiti-bpmn-model")
		testCompile("org.activiti:activiti-bpmn-converter")
		compile("org.activiti:activiti-image-generator")
		compile("org.imgscalr:imgscalr-lib:4.2")
		compile("org.slf4j:slf4j-api")
		testCompile("commons-io:commons-io")
		testCompile("junit:junit")
    }
}



project(':activiti-app') {
    apply plugin: 'war'
    apply plugin: 'eclipse-wtp'
    
    war {
        baseName = 'activiti-app'  
        //version = '-' + projectVersion + '-' + currentTime
    }
    

	dependencyManagement {
	  imports {
	     mavenBom "org.activiti:activiti-ui-root:${projectVersion}"
	  }
	}

    dependencies {
        compile project(':activiti-app-conf')
        compile("mysql:mysql-connector-java:5.1.43")
        compile("com.h2database:h2:1.4.194")
        testCompile("junit:junit:4.11")
    }
}

