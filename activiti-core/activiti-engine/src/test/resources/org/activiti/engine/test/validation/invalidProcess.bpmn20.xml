<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
	xmlns:activiti="http://activiti.org/bpmn" targetNamespace="Examples">

	<!-- Signals -->
	<signal></signal>
	<signal id="iDontHaveaName"></signal>

	<signal id="signal1" name="duplicateName"></signal>
	<signal id="signal2" name="duplicateName"></signal>

	<signal id="signal3" name="signal3" activiti:scope="invalid"></signal>

	<!-- Messages -->
	<message id="message1"></message>
	<message id="message2" name="message2" itemRef="invalid"></message>


	<!-- Operations -->
	<interface name="Counter Interface" implementationRef="counter:Counter">
		<operation id="prettyPrintCountOperation" name="prettyPrintCount Operation"
			implementationRef="counter:prettyPrintCount">
			<inMessageRef>tns:prettyPrintCountRequestMessage</inMessageRef>
			<outMessageRef>tns:prettyPrintCountResponseMessage</outMessageRef>
		</operation>
	</interface>

	<process id="invalidProcess" name="The invalid process"
		isExecutable="false">

		<extensionElements>
			<activiti:eventListener events="ENTITY_CREATE" />
			<activiti:eventListener events="ENTITY_DELETE"
				throwEvent="iDoNoExist" signalName="theSignal" />
			<activiti:executionListener event="start" />
		</extensionElements>

		<association associationDirection="One" sourceRef=""
			targetRef="" id="as1" />

		<documentation>This is a process for testing purposes</documentation>


		 <dataObject id="dataObject1" itemSubjectRef="xsd:string">
        <extensionElements>
        <activiti:value>Testing</activiti:value>
        </extensionElements>
        </dataObject>

		<startEvent id="theStart1" name="start1" />
		<startEvent id="theStart2" name="start2" />
		<startEvent id="theStart3" name="start3">
			<cancelEventDefinition></cancelEventDefinition>
		</startEvent>

		<sequenceFlow id="flow1" sourceRef="theStart1"
			targetRef="serviceTaskWithWrongResultVariableUsage" />

		<!-- Service task with wrong usage of variable name (not allowed when used
			with class) -->
		<serviceTask id="serviceTaskWithWrongResultVariableUsage"
			name="serviceTaskWithWrongResultVariableUsage" activiti:class="org.activiti.something"
			activiti:resultVariableName="This shouldn't happen">
			<extensionElements>
				<activiti:executionListener event="start" />
			</extensionElements>
		</serviceTask>
		<sequenceFlow id="flow2"
			sourceRef="serviceTaskWithWrongResultVariableUsage" targetRef="userTask1" />

		<!-- Service task without any implementation (class, expression, etc.) -->
		<serviceTask id="serviceTask2" name="myService"></serviceTask>

		<!-- Service task with invalid type -->
		<serviceTask id="serviceTask3" name="myService"
			activiti:type="invalid"></serviceTask>

		<!-- Service task (webservice with invalid operation) -->
		<serviceTask id="serviceTask4" name="myService"
			implementation="##WebService" operationRef="tns:invalid"></serviceTask>

		<!-- Send task w/o implementation -->
		<sendTask id="sendTask1" name="sendTask1"></sendTask>

		<!-- Send task with invalid type -->
		<sendTask id="sendTask2" name="sendTask2" activiti:type="wrong"></sendTask>

		<!-- Send task with wrong operation -->
		<sendTask id="sendTask3" name="sendTask3" implementation="##WebService"
			operationRef="tns:invalid"></sendTask>

		<!-- Mail task w/o recipient -->
		<serviceTask activiti:type="mail" id="mailTask1" name="mailTask1"></serviceTask>
		<sendTask activiti:type="mail" id="mailTask2" name="mailTask1"></sendTask>

		<!-- Mail task w/o content -->
		<serviceTask id="mailTask3" name="mailTask3" activiti:type="mail">
			<extensionElements>
				<activiti:field name="from" stringValue="order-shipping@thecompany.com" />
				<activiti:field name="to" expression="${recipient}" />
			</extensionElements>
		</serviceTask>
		<serviceTask id="mailTask4" name="mailTask4" activiti:type="mail">
            <extensionElements>
                <activiti:field name="from" stringValue="order-shipping@thecompany.com" />
                <activiti:field name="to" expression="${recipient}" />
            </extensionElements>
        </serviceTask>

        <!-- Shell task without command -->
        <serviceTask activiti:type="shell" id="shellTask1" name="shellTask1"></serviceTask>

		<userTask id="userTask1" name="userTask1">
			<extensionElements>
				<activiti:taskListener event="create" />
			</extensionElements>
		</userTask>

		<intermediateCatchEvent id="messageEvent1"
			name="messageEvent1">
			<messageEventDefinition />
		</intermediateCatchEvent>

		<intermediateCatchEvent id="messageEvent2"
			name="messageEvent2">
			<messageEventDefinition messageRef="notValid" />
		</intermediateCatchEvent>

		<intermediateThrowEvent id="signalEvent1" name="signalEvent1">
			<signalEventDefinition></signalEventDefinition>
		</intermediateThrowEvent>

		<intermediateThrowEvent id="signalEvent2" name="signalEvent2">
			<signalEventDefinition signalRef="notValid"></signalEventDefinition>
		</intermediateThrowEvent>

		<!-- Excl gw without seq flow -->
		<exclusiveGateway id="xGw1" name="gw"></exclusiveGateway>

		<!-- Excl gw with seq flow with a condition -->
		<exclusiveGateway id="xGw2" name="gw"></exclusiveGateway>
		<sequenceFlow id="flow3" sourceRef="xGw2" targetRef="theEnd">
			<conditionExpression>${expression}</conditionExpression>
		</sequenceFlow>

		<!-- Excl gw with seq flow with a default flow with condition -->
		<exclusiveGateway id="xGw3" default="flow4" name="gw"></exclusiveGateway>
		<sequenceFlow id="flow4" sourceRef="xGw3" targetRef="theEnd">
			<conditionExpression>${expression1}</conditionExpression>
		</sequenceFlow>
		<sequenceFlow id="flow5" sourceRef="xGw3" targetRef="theEnd">
			<conditionExpression>${wrong ecpreafaf ____ _===== asdasdas}</conditionExpression>
		</sequenceFlow>

		<!-- Excl gw with seq flow without conditions -->
		<exclusiveGateway id="xGw4" default="flow4" name="gw"></exclusiveGateway>
		<sequenceFlow id="flow6" sourceRef="xGw4" targetRef="theEnd">
		</sequenceFlow>
		<sequenceFlow id="flow7" sourceRef="xGw4" targetRef="theEnd">
		</sequenceFlow>

		<!-- Excl gw with one outgoing seq flow that is not default. THIS ONE IS
			VALID! -->
		<exclusiveGateway id="xGw5" name="gw"></exclusiveGateway>
		<sequenceFlow id="flow8" sourceRef="xGw5" targetRef="theEnd">
		</sequenceFlow>

		<!-- Script task without script -->
		<scriptTask id="scriptTask1" name="scriptTask1">
		</scriptTask>
		<scriptTask id="scriptTask2" name="scriptTask2">
			<script></script>
		</scriptTask>

		<!-- Subprocess with multiple start events -->
		<subProcess id="subprocess1" name="subProcess1">
			<startEvent id="subprocessStartEvent1" name="subprocesStartEvent1"></startEvent>
			<startEvent id="subprocessStartEvent2" name="subprocesStartEvent2"></startEvent>
		</subProcess>

		<!-- Subprocess with invalid start event -->
		<subProcess id="subprocess2" name="subProcess2">
			<startEvent id="subprocessStartEvent3" name="subprocesStartEvent3">
				<messageEventDefinition></messageEventDefinition>
			</startEvent>
		</subProcess>

		<!-- Event subprocess with invalid start event -->
		<subProcess id="subprocess3" name="subProcess3"
			triggeredByEvent="true">
			<startEvent id="subprocessStartEvent4" name="subprocesStartEvent4">
				<cancelEventDefinition></cancelEventDefinition>
			</startEvent>
		</subProcess>

		<!-- Boundary event without event definition -->
		<boundaryEvent id="boundaryEvent1" name="boundaryEvent"
			attachedToRef="subprocess3"></boundaryEvent>

		<!-- Error end event without error code -->
		<endEvent id="theEnd" name="theEnd">
			<errorEventDefinition></errorEventDefinition>
		</endEvent>

		<!-- Cancel end event outside transaction -->
		<endEvent id="theEnd2" name="theEnd2">
			<cancelEventDefinition></cancelEventDefinition>
		</endEvent>

		<!-- Cancel boundary on subprocess is not allowed (only on transaction) -->
		<subProcess id="subprocess5" name="subProcess5">
		</subProcess>
		<boundaryEvent id="cancelSubprocess5" name="cancelSubprocess5"
			attachedToRef="subProcess5">
			<cancelEventDefinition></cancelEventDefinition>
		</boundaryEvent>

		<!-- Transaction subprocess with multple cancel boundary events -->
		<transaction id="transation1" name="transaction1">
		</transaction>
		<boundaryEvent id="cancelTransaction1a" name="cancelTransaction1a"
			attachedToRef="transation1">
			<cancelEventDefinition></cancelEventDefinition>
		</boundaryEvent>
		<boundaryEvent id="cancelTransaction1b" name="cancelTransaction1b"
			attachedToRef="transation1">
			<cancelEventDefinition></cancelEventDefinition>
		</boundaryEvent>

		<!-- Intermediate catch event w/o event definition -->
		<intermediateCatchEvent id="intermediateCatchEvent1"
			name="intermediateCatchEvent1"></intermediateCatchEvent>

		<!-- Intermediate catch event with invalid event definition -->
		<intermediateCatchEvent id="intermediateCatchEvent2"
			name="intermediateCatchEvent2">
			<cancelEventDefinition></cancelEventDefinition>
		</intermediateCatchEvent>

		<!-- Intermediate throw event with invalid event definition -->
		<intermediateThrowEvent id="intermediateThrowEvent1"
			name="intermediateThrowEvent1">
			<timerEventDefinition></timerEventDefinition>
		</intermediateThrowEvent>

		<!-- Invalid event gateway: not connected to intermediate catch -->
		<eventBasedGateway id="eventGateway1" name="eventGateway2"></eventBasedGateway>
		<sequenceFlow id="invalidSeqFlowFromEventGateway1" name="seqFlow"
			targetRef="theEnd" sourceRef="eventGateway1"></sequenceFlow>


		<!-- Invalid data association: no targetref -->
		<serviceTask id="dataAssociationServiceTask1" name="dataAssociationServiceTask1" activiti:class="myDelegate">
		  <dataInputAssociation id="inputAssoc">
		      <sourceRef>dunno</sourceRef>
		  </dataInputAssociation>
		</serviceTask>

		<!-- Invalid multi instance definitions -->
		<userTask id="miUserTask1" name="miUserTask2">
		  <multiInstanceLoopCharacteristics></multiInstanceLoopCharacteristics>
		</userTask>
		<boundaryEvent attachedToRef="miUserTask1" id="timerBoundaryEvent1" name="timerBoundaryEvent1">
		  <timerEventDefinition>
		  </timerEventDefinition>
		</boundaryEvent>

		<!-- Invalid compensation event -->
		<boundaryEvent id="compensationEvent1" name="compensationEvent1" attachedToRef="invalid" >
          <compensateEventDefinition activityRef="invalid"/>
        </boundaryEvent>

        <!-- Nested subprocess with a data object with no name -->
        <subProcess id="someSubprocess1" name="someSubprocess1">

            <subProcess id="someSubprocess2" name="someSubprocess2">

                <subProcess id="someSubprocess3" name="someSubprocess3">

			         <dataObject id="dataObject2" itemSubjectRef="xsd:string">
			        <extensionElements>
			        <activiti:value>Testing2</activiti:value>
			        </extensionElements>
			        </dataObject>
			    </subProcess>

            </subProcess>

        </subProcess>

		<!-- Invalid sequence flow: src/target not correct -->
		<sequenceFlow id="invalidSeqFlow1" name="seqFlow"
			targetRef="theEnd" sourceRef="invalid"></sequenceFlow>
		<sequenceFlow id="invalidSeqFlow2" name="seqFlow"
			targetRef="invalid" sourceRef="boundaryEvent1"></sequenceFlow>

		<!-- Invalid sequence flow: crosses subprocess boundary -->
		<userTask id="beforeSubprocess"></userTask>
		<sequenceFlow id="invalidSeqFlow3" name="seqFlow"
			targetRef="subprocessStartEvent5" sourceRef="beforeSubprocess"></sequenceFlow>
		<subProcess id="subprocess4" name="subProcess4">
			<startEvent id="subprocessStartEvent5" name="subprocesStartEvent5"></startEvent>
		</subProcess>

	</process>

</definitions>
