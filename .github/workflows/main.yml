name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-18.04
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  deploy:
    runs-on: ubuntu-18.04
    needs: build
    if: ${{ github.event_name != 'pull_request' || contains(github.head_ref, 'migrate-ci-to-github-actions') }}
    steps:

      - name: Install jx-release-version
        if: ${{ github.event_name == 'push' }}
        run: >-
          curl -fsSL https://github.com/jenkins-x/jx-release-version/releases/download/v$JX_RELEASE_VERSION/jx-release-version-linux-amd64.tar.gz \
            | tar xz -C $HOME/bin jx-release-version
        env:
          JX_RELEASE_VERSION: 2.2.3

      - name: Bump VERSION with jx-release-version
        if: ${{ github.event_name == 'push' }}
        run: >-
          echo $(jx-release-version) > VERSION

      - name: Set preview version
        if: ${{ contains(github.head_ref, 'migrate-ci-to-github-actions') }}
        run: >-
          echo 0.0.1-${GITHUB_REF#refs/heads/}-$GITHUB_RUN_NUMBER > VERSION

      - name: Set VERSION env variable
        run: echo "VERSION}=$(cat VERSION)" >> $GITHUB_ENV

      - name: Deploy with Maven
        if: ${{ github.event_name != 'pull_request' || contains(github.head_ref, 'migrate-ci-to-github-actions') }}
        run: >-
          mvn -s settings.xml versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Create release tag
        if: ${{ github.event_name == 'push' }}
        run: >-
          git commit -am "Release $VERSION" --allow-empty
          git tag -fa v$VERSION -m "Release version $VERSION"
          git push -f -q https://$GITHUB_TOKEN@github.com/Activiti/Activiti.git v$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install updatebot
        if: ${{ github.event_name == 'push' }}
        run: >-
          curl -fsSLo $HOME/bin/updatebot.jar \
            https://repo1.maven.org/maven2/io/jenkins/updatebot/updatebot/$UPDATEBOT_VERSION/updatebot-$UPDATEBOT_VERSION.jar
          echo "java -jar $HOME/bin/updatebot.jar \$@" > $HOME/bin/updatebot
          chmod +x $HOME/bin/updatebot
        env:
          UPDATEBOT_VERSION: 1.1.62

      - name: Run updatebot
        if: ${{ github.event_name == 'push' }}
        run: >-
          updatebot push-version --kind maven \
            org.activiti:activiti-dependencies $VERSION \
            org.activiti:activiti-api-dependencies $VERSION \
            org.activiti:activiti-core-dependencies $VERSION \
            org.activiti:activiti-core-common-dependencies $VERSION
        env:
          UPDATEBOT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
